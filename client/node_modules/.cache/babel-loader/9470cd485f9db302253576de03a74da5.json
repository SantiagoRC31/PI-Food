{"ast":null,"code":"import { CLEAN_DETAIL, FILTER_BY_TYPEDIET, GET_BY_ID, GET_BY_NAME, GET_TYPE_DIETS, GET_USER, HANDLE_NUMBER, ORDER, ORDER_BY_PUNTUATION, ORDER_BY_SOURCE, PAGINATE } from \"../action/action-type\";\nlet inicialState = {\n  allFood: [],\n  allFoodCopy: [],\n  allFoodBackUp: [],\n  details: [],\n  diets: [],\n  numPage: 1,\n  currentPage: 0\n};\nconsole.log(\"ds:\", diets);\nfunction rootReducer(state = inicialState, action) {\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...state,\n        allFood: [...action.payload].splice(0, 9),\n        allFoodCopy: action.payload\n      };\n      break;\n    case PAGINATE:\n      const next_page = state.currentPage + 1;\n      const prev_page = state.currentPage - 1;\n      const firstIndex = action.payload === \"next\" ? next_page * 9 : prev_page * 9;\n      if (action.payload === \"next\" && firstIndex >= state.allFoodCopy.length) {\n        return [...state];\n      } else if (action.payload === \"prev\" && prev_page < 0) {\n        return [...state];\n      }\n      return {\n        ...state,\n        allFood: [...state.allFoodCopy].splice(firstIndex, 9),\n        currentPage: action.payload === \"next\" ? next_page : prev_page\n      };\n    case ORDER:\n      if (action.payload === \"az\") {\n        const allFoodOrder = [...state.allFoodCopy].sort((prev, next) => {\n          if (prev.title > next.title) return 1;\n          if (prev.title < next.title) return -1;\n          return 0;\n        });\n        return {\n          ...state,\n          allFood: [...allFoodOrder].slice(0, 9),\n          allFoodCopy: allFoodOrder,\n          currentPage: 0\n        };\n      } else if (action.payload === \"za\") {\n        const allFoodOrder = [...state.allFoodCopy].sort((prev, next) => {\n          if (prev.title > next.title) return -1;\n          if (prev.title < next.title) return 1;\n          return 0;\n        });\n        return {\n          ...state,\n          allFood: [...allFoodOrder].slice(0, 9),\n          allFoodCopy: allFoodOrder,\n          currentPage: 0\n        };\n      }\n    case GET_BY_ID:\n      return {\n        ...state,\n        details: action.payload\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        allFoodCopy: []\n      };\n    case ORDER_BY_SOURCE:\n      let fromApi = state.allFoodCopy.filter(allFoods => !isNaN(+allFoods.id));\n      let fromBDD = state.allFoodCopy.filter(allFoods => isNaN(+allFoods.id));\n      let all = state.allFoodCopy;\n      if (action.payload === \"API\") {\n        return {\n          ...state,\n          allFood: fromApi.slice(0, 9)\n        };\n      } else if (action.payload === \"BDD\") {\n        return {\n          ...state,\n          allFood: fromBDD.slice(0, 9)\n        };\n      } else if (action.payload === \"All\") {\n        return {\n          ...state,\n          allFood: all.slice(0, 9)\n        };\n      }\n      console.log(all);\n      console.log(action);\n      console.log(state.allFoodCopy);\n      console.log(\"aqui\");\n    case HANDLE_NUMBER:\n      return {\n        ...state,\n        numPage: action.payload,\n        currentPage: 0\n      };\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allFoodCopy: action.payload,\n        allFood: action.payload\n      };\n    case GET_TYPE_DIETS:\n      return {\n        ...state,\n        diets: action.payload\n      };\n    case ORDER_BY_PUNTUATION:\n      let orderpunt = action.payload === \"menormayor\" ? state.allFoodCopy.sort(function (a, b) {\n        if (a.healthScore > b.healthScore) {\n          return 1;\n        }\n        if (b.healthScore > a.healthScore) {\n          return -1;\n        }\n        return 0;\n      }) : state.allFoodCopy.sort(function (a, b) {\n        if (a.healthScore > b.healthScore) {\n          return -1;\n        }\n        if (b.healthScore > a.healthScore) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        allFood: orderpunt.slice(0, 9)\n      };\n    case FILTER_BY_TYPEDIET:\n      const allRec = state.allFood;\n      const typeDietFilter = action.payload === \"All\" ? allRec : allRec.filter(t => t.diets.find(e => e.name === action.payload));\n      return {\n        ...state,\n        allFoodCopy: typeDietFilter.slice(0, 9),\n        allFood: typeDietFilter.slice(0, 9)\n      };\n    default:\n      return state;\n      break;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["CLEAN_DETAIL","FILTER_BY_TYPEDIET","GET_BY_ID","GET_BY_NAME","GET_TYPE_DIETS","GET_USER","HANDLE_NUMBER","ORDER","ORDER_BY_PUNTUATION","ORDER_BY_SOURCE","PAGINATE","inicialState","allFood","allFoodCopy","allFoodBackUp","details","diets","numPage","currentPage","console","log","rootReducer","state","action","type","payload","splice","next_page","prev_page","firstIndex","length","allFoodOrder","sort","prev","next","title","slice","fromApi","filter","allFoods","isNaN","id","fromBDD","all","orderpunt","a","b","healthScore","allRec","typeDietFilter","t","find","e","name"],"sources":["C:/Users/usuario/Desktop/PI-Food/client/src/redux/reducer/reducer.js"],"sourcesContent":["import { CLEAN_DETAIL, FILTER_BY_TYPEDIET, GET_BY_ID, GET_BY_NAME, GET_TYPE_DIETS, GET_USER, HANDLE_NUMBER, ORDER, ORDER_BY_PUNTUATION, ORDER_BY_SOURCE, PAGINATE } from \"../action/action-type\";\r\n\r\nlet inicialState = {\r\n    allFood:[],\r\n    allFoodCopy:[],\r\n    allFoodBackUp:[],\r\n    details:[],\r\n    diets:[],\r\n    numPage: 1,\r\n    currentPage:0\r\n}\r\nconsole.log(\"ds:\",diets)\r\n\r\n\r\nfunction rootReducer(state = inicialState, action){\r\n    switch(action.type){\r\n        case GET_USER: \r\n            return{\r\n                ...state,\r\n                allFood: [...action.payload].splice(0, 9),\r\n                allFoodCopy: action.payload,\r\n            }\r\n            break; \r\n\r\n        case PAGINATE:\r\n            const next_page = state.currentPage + 1;\r\n            const prev_page = state.currentPage - 1;\r\n            const firstIndex = action.payload === \"next\" ? next_page * 9 : prev_page * 9;\r\n            if(action.payload === \"next\" && firstIndex >= state.allFoodCopy.length){ return[...state]}\r\n            else if (action.payload === \"prev\" && prev_page < 0){ return[...state]}\r\n\r\n            return{\r\n                ...state,\r\n                allFood: [...state.allFoodCopy].splice(firstIndex, 9),\r\n                currentPage: action.payload === \"next\" ? next_page : prev_page\r\n                \r\n            }\r\n\r\n        case ORDER:\r\n            if(action.payload === \"az\"){\r\n                const allFoodOrder = [...state.allFoodCopy].sort((prev, next) => {\r\n                    if(prev.title > next.title)return 1\r\n                    if(prev.title < next.title)return -1\r\n                    return 0\r\n                })\r\n                return{\r\n                    ...state,\r\n                    allFood:[...allFoodOrder].slice(0, 9),\r\n                    allFoodCopy: allFoodOrder,\r\n                    currentPage: 0\r\n                }\r\n            }else if(action.payload === \"za\"){\r\n                const allFoodOrder = [...state.allFoodCopy].sort((prev, next) => {\r\n                    if(prev.title > next.title)return -1\r\n                    if(prev.title < next.title)return 1\r\n                    return 0\r\n                })\r\n                return{\r\n                    ...state,\r\n                    allFood:[...allFoodOrder].slice(0, 9),\r\n                    allFoodCopy: allFoodOrder,\r\n                    currentPage: 0\r\n                }\r\n            }\r\n\r\n\r\n        case GET_BY_ID:\r\n            return {\r\n              ...state,\r\n              details: action.payload,\r\n            };\r\n          \r\n\r\n        case CLEAN_DETAIL:\r\n            return {\r\n              ...state,\r\n              allFoodCopy:[]\r\n              \r\n            };\r\n\r\n\r\n        case ORDER_BY_SOURCE:\r\n            \r\n            let fromApi = state.allFoodCopy.filter((allFoods) => !isNaN(+allFoods.id));\r\n            let fromBDD = state.allFoodCopy.filter((allFoods) => isNaN(+allFoods.id));\r\n            let all = state.allFoodCopy\r\n            if (action.payload === \"API\") {\r\n                return {\r\n                    ...state,\r\n                    allFood: fromApi.slice(0, 9),\r\n                };\r\n            } else if (action.payload === \"BDD\") {\r\n                return {\r\n                    ...state,\r\n                    allFood: fromBDD.slice(0, 9),\r\n                };\r\n            } else if(action.payload === \"All\") {\r\n                return {\r\n                    ...state,\r\n                    allFood: all.slice(0, 9),\r\n                };\r\n            }\r\n            console.log(all)\r\n            console.log(action)\r\n            console.log(state.allFoodCopy)\r\n            console.log(\"aqui\")\r\n        case HANDLE_NUMBER:\r\n            return {\r\n              ...state,\r\n              numPage: action.payload,\r\n              currentPage: 0\r\n            };\r\n\r\n\r\n        case GET_BY_NAME:\r\n            return {\r\n            ...state,\r\n            allFoodCopy: action.payload,\r\n            allFood: action.payload,\r\n            };\r\n\r\n\r\n        case GET_TYPE_DIETS:\r\n            return {\r\n            ...state,\r\n            diets: action.payload,\r\n        };\r\n\r\n        case ORDER_BY_PUNTUATION:\r\n         let orderpunt =\r\n            action.payload === \"menormayor\"\r\n            ? state.allFoodCopy.sort(function (a, b) {\r\n                if (a.healthScore > b.healthScore) {\r\n                    return 1;\r\n                }\r\n                if (b.healthScore > a.healthScore) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n                })\r\n            : state.allFoodCopy.sort(function (a, b) {\r\n                if (a.healthScore > b.healthScore) {\r\n                    return -1;\r\n                }\r\n                if (b.healthScore > a.healthScore) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n                });\r\n        return {\r\n            ...state,\r\n            allFood: orderpunt.slice(0, 9),\r\n        };\r\n\r\n        case FILTER_BY_TYPEDIET:\r\n            const allRec = state.allFood;\r\n            const typeDietFilter =\r\n              action.payload === \"All\"\r\n                ? allRec\r\n                : allRec.filter((t) =>\r\n                    t.diets.find((e) => e.name === action.payload)\r\n                  );\r\n            return {\r\n              ...state,\r\n              allFoodCopy: typeDietFilter.slice(0, 9),\r\n              allFood: typeDietFilter.slice(0, 9),\r\n            };\r\n\r\n\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}